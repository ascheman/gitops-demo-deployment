name: 'GitOps Perform'

on:
  push:
    branches: [ "perform/**" ]
  workflow_dispatch: {}

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GIT_COMMITTER_NAME: "GitHub Action"
  GIT_COMMITTER_EMAIL: "github@acme.com"
  GIT_AUTHOR_NAME: "GitHub Action"
  GIT_AUTHOR_EMAIL: "github@acme.com"

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Check if a plan exists and abort otherwise
    - name: checkplan
      run: if ! test -r "plan.out"; then echo "No Terraform Plan exists (aborting)!" >&2; exit 1; fi

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize Terraform, apply plan (if it exists), and remove plan/log to finish PR
    - name: Terraform Init
      run: scripts/terraform-init
    - name: Terraform Apply
      run: scripts/terraform-apply
    - name: Finalize PR
      run: git rm -f plan.out plan.log && git commit -m"Applied the computed Terraform plan" && git push


