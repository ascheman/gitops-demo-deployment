[command]/home/runner/work/_temp/89b5a176-e674-460e-9704-8c8f70cb7297/terraform-bin plan -out plan.out -no-color
data.aws_region.current: Reading...
data.aws_caller_identity.current: Reading...
data.aws_region.current: Read complete after 0s [id=us-east-1]
data.aws_caller_identity.current: Read complete after 0s [id=942705247267]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # data.aws_iam_policy_document.bucket_policy will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "bucket_policy" {
      + id   = (known after apply)
      + json = (known after apply)

      + statement {
          + actions   = [
              + "s3:GetObject",
            ]
          + effect    = "Allow"
          + resources = [
              + (known after apply),
            ]

          + principals {
              + identifiers = [
                  + "*",
                ]
              + type        = "AWS"
            }
        }
    }

  # aws_s3_bucket.this will be created
  + resource "aws_s3_bucket" "this" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = "aschemann-gitops-sample-942705247267-dev-us-east-1"
      + bucket_domain_name          = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = false
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags                        = {
          + "Git-Commit" = "unknown"
          + "Version"    = "v1"
        }
      + tags_all                    = {
          + "Git-Commit" = "unknown"
          + "Version"    = "v1"
        }
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)
    }

  # aws_s3_bucket_acl.this will be created
  + resource "aws_s3_bucket_acl" "this" {
      + acl    = "public-read"
      + bucket = (known after apply)
      + id     = (known after apply)
    }

  # aws_s3_bucket_policy.bucket_policy will be created
  + resource "aws_s3_bucket_policy" "bucket_policy" {
      + bucket = (known after apply)
      + id     = (known after apply)
      + policy = (known after apply)
    }

  # aws_s3_bucket_versioning.this will be created
  + resource "aws_s3_bucket_versioning" "this" {
      + bucket = (known after apply)
      + id     = (known after apply)

      + versioning_configuration {
          + mfa_delete = (known after apply)
          + status     = "Enabled"
        }
    }

  # aws_s3_bucket_website_configuration.this will be created
  + resource "aws_s3_bucket_website_configuration" "this" {
      + bucket           = (known after apply)
      + id               = (known after apply)
      + routing_rules    = (known after apply)
      + website_domain   = (known after apply)
      + website_endpoint = (known after apply)

      + index_document {
          + suffix = "index.html"
        }
    }

  # aws_s3_object_copy.this will be created
  + resource "aws_s3_object_copy" "this" {
      + acl                           = "private"
      + bucket                        = (known after apply)
      + bucket_key_enabled            = (known after apply)
      + cache_control                 = (known after apply)
      + content_disposition           = (known after apply)
      + content_encoding              = (known after apply)
      + content_language              = (known after apply)
      + content_type                  = "text/html"
      + customer_algorithm            = (known after apply)
      + customer_key_md5              = (known after apply)
      + etag                          = (known after apply)
      + expiration                    = (known after apply)
      + force_destroy                 = false
      + id                            = (known after apply)
      + key                           = "index.html"
      + kms_encryption_context        = (sensitive value)
      + kms_key_id                    = (sensitive value)
      + last_modified                 = (known after apply)
      + metadata                      = (known after apply)
      + object_lock_legal_hold_status = (known after apply)
      + object_lock_mode              = (known after apply)
      + object_lock_retain_until_date = (known after apply)
      + request_charged               = (known after apply)
      + server_side_encryption        = (known after apply)
      + source                        = "aschemann-gitops-sample-repository-942705247267-us-east-1/index-v1.html"
      + source_version_id             = (known after apply)
      + storage_class                 = (known after apply)
      + tags_all                      = (known after apply)
      + version_id                    = (known after apply)
      + website_redirect              = (known after apply)
    }

Plan: 6 to add, 0 to change, 0 to destroy.

─────────────────────────────────────────────────────────────────────────────

Saved the plan to: plan.out

To perform exactly these actions, run the following command to apply:
    terraform apply "plan.out"
::debug::Terraform exited with code 0.
::debug::stdout: data.aws_region.current: Reading...%0Adata.aws_caller_identity.current: Reading...%0Adata.aws_region.current: Read complete after 0s [id=us-east-1]%0Adata.aws_caller_identity.current: Read complete after 0s [id=942705247267]%0A%0ATerraform used the selected providers to generate the following execution%0Aplan. Resource actions are indicated with the following symbols:%0A  + create%0A <= read (data resources)%0A%0ATerraform will perform the following actions:%0A%0A  # data.aws_iam_policy_document.bucket_policy will be read during apply%0A  # (config refers to values not yet known)%0A <= data "aws_iam_policy_document" "bucket_policy" {%0A      + id   = (known after apply)%0A      + json = (known after apply)%0A%0A      + statement {%0A          + actions   = [%0A              + "s3:GetObject",%0A            ]%0A          + effect    = "Allow"%0A          + resources = [%0A              + (known after apply),%0A            ]%0A%0A          + principals {%0A              + identifiers = [%0A                  + "*",%0A                ]%0A              + type        = "AWS"%0A            }%0A        }%0A    }%0A%0A  # aws_s3_bucket.this will be created%0A  + resource "aws_s3_bucket" "this" {%0A      + acceleration_status         = (known after apply)%0A      + acl                         = (known after apply)%0A      + arn                         = (known after apply)%0A      + bucket                      = "aschemann-gitops-sample-942705247267-dev-us-east-1"%0A      + bucket_domain_name          = (known after apply)%0A      + bucket_regional_domain_name = (known after apply)%0A      + force_destroy               = false%0A      + hosted_zone_id              = (known after apply)%0A      + id                          = (known after apply)%0A      + object_lock_enabled         = (known after apply)%0A      + policy                      = (known after apply)%0A      + region                      = (known after apply)%0A      + request_payer               = (known after apply)%0A      + tags                        = {%0A          + "Git-Commit" = "unknown"%0A          + "Version"    = "v1"%0A        }%0A      + tags_all                    = {%0A          + "Git-Commit" = "unknown"%0A          + "Version"    = "v1"%0A        }%0A      + website_domain              = (known after apply)%0A      + website_endpoint            = (known after apply)%0A    }%0A%0A  # aws_s3_bucket_acl.this will be created%0A  + resource "aws_s3_bucket_acl" "this" {%0A      + acl    = "public-read"%0A      + bucket = (known after apply)%0A      + id     = (known after apply)%0A    }%0A%0A  # aws_s3_bucket_policy.bucket_policy will be created%0A  + resource "aws_s3_bucket_policy" "bucket_policy" {%0A      + bucket = (known after apply)%0A      + id     = (known after apply)%0A      + policy = (known after apply)%0A    }%0A%0A  # aws_s3_bucket_versioning.this will be created%0A  + resource "aws_s3_bucket_versioning" "this" {%0A      + bucket = (known after apply)%0A      + id     = (known after apply)%0A%0A      + versioning_configuration {%0A          + mfa_delete = (known after apply)%0A          + status     = "Enabled"%0A        }%0A    }%0A%0A  # aws_s3_bucket_website_configuration.this will be created%0A  + resource "aws_s3_bucket_website_configuration" "this" {%0A      + bucket           = (known after apply)%0A      + id               = (known after apply)%0A      + routing_rules    = (known after apply)%0A      + website_domain   = (known after apply)%0A      + website_endpoint = (known after apply)%0A%0A      + index_document {%0A          + suffix = "index.html"%0A        }%0A    }%0A%0A  # aws_s3_object_copy.this will be created%0A  + resource "aws_s3_object_copy" "this" {%0A      + acl                           = "private"%0A      + bucket                        = (known after apply)%0A      + bucket_key_enabled            = (known after apply)%0A      + cache_control                 = (known after apply)%0A      + content_disposition           = (known after apply)%0A      + content_encoding              = (known after apply)%0A      + content_language              = (known after apply)%0A      + content_type                  = "text/html"%0A      + customer_algorithm            = (known after apply)%0A      + customer_key_md5              = (known after apply)%0A      + etag                          = (known after apply)%0A      + expiration                    = (known after apply)%0A      + force_destroy                 = false%0A      + id                            = (known after apply)%0A      + key                           = "index.html"%0A      + kms_encryption_context        = (sensitive value)%0A      + kms_key_id                    = (sensitive value)%0A      + last_modified                 = (known after apply)%0A      + metadata                      = (known after apply)%0A      + object_lock_legal_hold_status = (known after apply)%0A      + object_lock_mode              = (known after apply)%0A      + object_lock_retain_until_date = (known after apply)%0A      + request_charged               = (known after apply)%0A      + server_side_encryption        = (known after apply)%0A      + source                        = "aschemann-gitops-sample-repository-942705247267-us-east-1/index-v1.html"%0A      + source_version_id             = (known after apply)%0A      + storage_class                 = (known after apply)%0A      + tags_all                      = (known after apply)%0A      + version_id                    = (known after apply)%0A      + website_redirect              = (known after apply)%0A    }%0A%0APlan: 6 to add, 0 to change, 0 to destroy.%0A%0A─────────────────────────────────────────────────────────────────────────────%0A%0ASaved the plan to: plan.out%0A%0ATo perform exactly these actions, run the following command to apply:%0A    terraform apply "plan.out"%0A
::debug::stderr: 
::debug::exitcode: 0
