[command]/home/runner/work/_temp/1cacdfee-6918-4826-9a8d-5f1b53dbdec0/terraform-bin plan -out plan.out -no-color
data.aws_region.current: Reading...
data.aws_caller_identity.current: Reading...
data.aws_region.current: Read complete after 0s [id=us-east-1]
data.aws_caller_identity.current: Read complete after 0s [id=942705247267]
aws_s3_bucket.this: Refreshing state... [id=aschemann-gitops-sample-942705247267-test-us-east-1]
aws_s3_bucket_policy.bucket_policy: Refreshing state... [id=aschemann-gitops-sample-942705247267-test-us-east-1]
aws_s3_bucket_acl.this: Refreshing state... [id=aschemann-gitops-sample-942705247267-test-us-east-1,public-read]
aws_s3_bucket_website_configuration.this: Refreshing state... [id=aschemann-gitops-sample-942705247267-test-us-east-1]
aws_s3_bucket_versioning.this: Refreshing state... [id=aschemann-gitops-sample-942705247267-test-us-east-1]
aws_s3_object_copy.this: Refreshing state... [id=index.html]

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  ~ update in-place
-/+ destroy and then create replacement
 <= read (data resources)

Terraform will perform the following actions:

  # data.aws_iam_policy_document.bucket_policy will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_iam_policy_document" "bucket_policy" {
      + id   = (known after apply)
      + json = (known after apply)

      + statement {
          + actions   = [
              + "s3:GetObject",
            ]
          + effect    = "Allow"
          + resources = [
              + "arn:aws:s3:::aschemann-gitops-sample-942705247267-test-us-east-1/*",
            ]

          + principals {
              + identifiers = [
                  + "*",
                ]
              + type        = "AWS"
            }
        }
    }

  # aws_s3_bucket.this will be updated in-place
  ~ resource "aws_s3_bucket" "this" {
        id                          = "aschemann-gitops-sample-942705247267-test-us-east-1"
      ~ tags                        = {
          ~ "Version"    = "v1" -> "v2"
            # (1 unchanged element hidden)
        }
      ~ tags_all                    = {
          ~ "Version"    = "v1" -> "v2"
            # (1 unchanged element hidden)
        }
        # (12 unchanged attributes hidden)

        # (4 unchanged blocks hidden)
    }

  # aws_s3_bucket_policy.bucket_policy will be updated in-place
  ~ resource "aws_s3_bucket_policy" "bucket_policy" {
        id     = "aschemann-gitops-sample-942705247267-test-us-east-1"
      ~ policy = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "s3:GetObject"
                      - Effect    = "Allow"
                      - Principal = {
                          - AWS = "*"
                        }
                      - Resource  = "arn:aws:s3:::aschemann-gitops-sample-942705247267-test-us-east-1/*"
                      - Sid       = ""
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> (known after apply)
        # (1 unchanged attribute hidden)
    }

  # aws_s3_object_copy.this must be replaced
-/+ resource "aws_s3_object_copy" "this" {
      ~ bucket_key_enabled            = false -> (known after apply)
      + cache_control                 = (known after apply)
      + content_disposition           = (known after apply)
      + content_encoding              = (known after apply)
      + content_language              = (known after apply)
      + customer_algorithm            = (known after apply)
      + customer_key_md5              = (known after apply)
      ~ etag                          = "6b994762a0eaa8e79e06ebdfd37637cf" -> (known after apply)
      + expiration                    = (known after apply)
      ~ id                            = "index.html" -> (known after apply)
      + kms_encryption_context        = (sensitive value)
      + kms_key_id                    = (sensitive value)
      ~ last_modified                 = "2023-02-09T12:53:39Z" -> (known after apply)
      ~ metadata                      = {} -> (known after apply)
      + object_lock_legal_hold_status = (known after apply)
      + object_lock_mode              = (known after apply)
      + object_lock_retain_until_date = (known after apply)
      ~ request_charged               = false -> (known after apply)
      + server_side_encryption        = (known after apply)
      ~ source                        = "aschemann-gitops-sample-repository-942705247267-us-east-1/index-v1.html" -> "aschemann-gitops-sample-repository-942705247267-us-east-1/index-v2.html" # forces replacement
      ~ source_version_id             = "uwP7NpeCtodtREnUFiVtxdUiRcgxUoe_" -> (known after apply)
      ~ storage_class                 = "STANDARD" -> (known after apply)
      - tags                          = {} -> null
      ~ tags_all                      = {} -> (known after apply)
      ~ version_id                    = "Rhb3Sw7CId8iLoDRZjW05Frcalhc6ALo" -> (known after apply)
      + website_redirect              = (known after apply)
        # (5 unchanged attributes hidden)
    }

Plan: 1 to add, 2 to change, 1 to destroy.

─────────────────────────────────────────────────────────────────────────────

Saved the plan to: plan.out

To perform exactly these actions, run the following command to apply:
    terraform apply "plan.out"
::debug::Terraform exited with code 0.
::debug::stdout: data.aws_region.current: Reading...%0Adata.aws_caller_identity.current: Reading...%0Adata.aws_region.current: Read complete after 0s [id=us-east-1]%0Adata.aws_caller_identity.current: Read complete after 0s [id=942705247267]%0Aaws_s3_bucket.this: Refreshing state... [id=aschemann-gitops-sample-942705247267-test-us-east-1]%0Aaws_s3_bucket_policy.bucket_policy: Refreshing state... [id=aschemann-gitops-sample-942705247267-test-us-east-1]%0Aaws_s3_bucket_acl.this: Refreshing state... [id=aschemann-gitops-sample-942705247267-test-us-east-1,public-read]%0Aaws_s3_bucket_website_configuration.this: Refreshing state... [id=aschemann-gitops-sample-942705247267-test-us-east-1]%0Aaws_s3_bucket_versioning.this: Refreshing state... [id=aschemann-gitops-sample-942705247267-test-us-east-1]%0Aaws_s3_object_copy.this: Refreshing state... [id=index.html]%0A%0ATerraform used the selected providers to generate the following execution%0Aplan. Resource actions are indicated with the following symbols:%0A  ~ update in-place%0A-/+ destroy and then create replacement%0A <= read (data resources)%0A%0ATerraform will perform the following actions:%0A%0A  # data.aws_iam_policy_document.bucket_policy will be read during apply%0A  # (depends on a resource or a module with changes pending)%0A <= data "aws_iam_policy_document" "bucket_policy" {%0A      + id   = (known after apply)%0A      + json = (known after apply)%0A%0A      + statement {%0A          + actions   = [%0A              + "s3:GetObject",%0A            ]%0A          + effect    = "Allow"%0A          + resources = [%0A              + "arn:aws:s3:::aschemann-gitops-sample-942705247267-test-us-east-1/*",%0A            ]%0A%0A          + principals {%0A              + identifiers = [%0A                  + "*",%0A                ]%0A              + type        = "AWS"%0A            }%0A        }%0A    }%0A%0A  # aws_s3_bucket.this will be updated in-place%0A  ~ resource "aws_s3_bucket" "this" {%0A        id                          = "aschemann-gitops-sample-942705247267-test-us-east-1"%0A      ~ tags                        = {%0A          ~ "Version"    = "v1" -> "v2"%0A            # (1 unchanged element hidden)%0A        }%0A      ~ tags_all                    = {%0A          ~ "Version"    = "v1" -> "v2"%0A            # (1 unchanged element hidden)%0A        }%0A        # (12 unchanged attributes hidden)%0A%0A        # (4 unchanged blocks hidden)%0A    }%0A%0A  # aws_s3_bucket_policy.bucket_policy will be updated in-place%0A  ~ resource "aws_s3_bucket_policy" "bucket_policy" {%0A        id     = "aschemann-gitops-sample-942705247267-test-us-east-1"%0A      ~ policy = jsonencode(%0A            {%0A              - Statement = [%0A                  - {%0A                      - Action    = "s3:GetObject"%0A                      - Effect    = "Allow"%0A                      - Principal = {%0A                          - AWS = "*"%0A                        }%0A                      - Resource  = "arn:aws:s3:::aschemann-gitops-sample-942705247267-test-us-east-1/*"%0A                      - Sid       = ""%0A                    },%0A                ]%0A              - Version   = "2012-10-17"%0A            }%0A        ) -> (known after apply)%0A        # (1 unchanged attribute hidden)%0A    }%0A%0A  # aws_s3_object_copy.this must be replaced%0A-/+ resource "aws_s3_object_copy" "this" {%0A      ~ bucket_key_enabled            = false -> (known after apply)%0A      + cache_control                 = (known after apply)%0A      + content_disposition           = (known after apply)%0A      + content_encoding              = (known after apply)%0A      + content_language              = (known after apply)%0A      + customer_algorithm            = (known after apply)%0A      + customer_key_md5              = (known after apply)%0A      ~ etag                          = "6b994762a0eaa8e79e06ebdfd37637cf" -> (known after apply)%0A      + expiration                    = (known after apply)%0A      ~ id                            = "index.html" -> (known after apply)%0A      + kms_encryption_context        = (sensitive value)%0A      + kms_key_id                    = (sensitive value)%0A      ~ last_modified                 = "2023-02-09T12:53:39Z" -> (known after apply)%0A      ~ metadata                      = {} -> (known after apply)%0A      + object_lock_legal_hold_status = (known after apply)%0A      + object_lock_mode              = (known after apply)%0A      + object_lock_retain_until_date = (known after apply)%0A      ~ request_charged               = false -> (known after apply)%0A      + server_side_encryption        = (known after apply)%0A      ~ source                        = "aschemann-gitops-sample-repository-942705247267-us-east-1/index-v1.html" -> "aschemann-gitops-sample-repository-942705247267-us-east-1/index-v2.html" # forces replacement%0A      ~ source_version_id             = "uwP7NpeCtodtREnUFiVtxdUiRcgxUoe_" -> (known after apply)%0A      ~ storage_class                 = "STANDARD" -> (known after apply)%0A      - tags                          = {} -> null%0A      ~ tags_all                      = {} -> (known after apply)%0A      ~ version_id                    = "Rhb3Sw7CId8iLoDRZjW05Frcalhc6ALo" -> (known after apply)%0A      + website_redirect              = (known after apply)%0A        # (5 unchanged attributes hidden)%0A    }%0A%0APlan: 1 to add, 2 to change, 1 to destroy.%0A%0A─────────────────────────────────────────────────────────────────────────────%0A%0ASaved the plan to: plan.out%0A%0ATo perform exactly these actions, run the following command to apply:%0A    terraform apply "plan.out"%0A
::debug::stderr: 
::debug::exitcode: 0
